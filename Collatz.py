"""
Самая длинная последовательность Коллатца.
Следующая итерационная последовательность определена для набора натуральных чисел:
Если n чётное n = n/2 Если n нечётное n = n*3 + 1
Используя приведенное выше правило и начиная с 13, мы генерируем следующую последовательность:
13 -> 40 -> 20 -> 10 -> 5 -> 16 -> 8 -> 4 -> 2 -> 1
Видно, что эта последовательность (начиная с 13 и заканчивая 1) содержит 10 терминов. Хотя это еще не доказано (задача
Коллатца), считается, что все стартовые номера заканчиваются на 1.
Какое начальное число, меньшее миллиона, дает самую длинную цепочку?
Дополнительное условие:
Максимальная скорсть работы программы среди всех слушателей.
"""

from time import time
rez = {}


def f(d=dict, n=int):
    if n == 1:
        return 1
    elif n % 2 == 0:
        n = n / 2
    else:
        n = n * 3 + 1
    if n in d:
        return 1 + d[n]
    else:
        return 1 + f(d, n)


a = time()
for i in range(2, 1000000):
    rez[i] = f(rez, i)
max_val = 0
for k, v in rez.items():
    if v > max_val:
        max_val = v
        max_key = k

b = time()
c = round(b - a, 2)
print(f'Число с наибольшей последовательностью: {max_key}')
print(f'Длина последовательности: {max_val}')
print(f'Скорость работы программы: {c} секунды')
